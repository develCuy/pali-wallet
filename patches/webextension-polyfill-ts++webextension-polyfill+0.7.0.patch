diff --git a/node_modules/webextension-polyfill-ts/node_modules/webextension-polyfill/dist/browser-polyfill.js b/node_modules/webextension-polyfill-ts/node_modules/webextension-polyfill/dist/browser-polyfill.js
index 51f7fb6..eae5bce 100644
--- a/node_modules/webextension-polyfill-ts/node_modules/webextension-polyfill/dist/browser-polyfill.js
+++ b/node_modules/webextension-polyfill-ts/node_modules/webextension-polyfill/dist/browser-polyfill.js
@@ -24,6 +24,7 @@
 
   if (typeof browser === "undefined" || Object.getPrototypeOf(browser) !== Object.prototype) {
     const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = "The message port closed before a response was received.";
+    const CHROME_SEND_MESSAGE_CALLBACK_NO_LISTENER_MESSAGE = "A listener indicated an asynchronous response by returning true, but the message channel closed before a response was received"; // No period
     const SEND_RESPONSE_DEPRECATION_WARNING = "Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)"; // Wrapping the bulk of this polyfill in a one-time-use function is a minor
     // optimization for Firefox. Since Spidermonkey does not fully parse the
     // contents of a function until the first time it's called, and since it will
@@ -1147,7 +1148,7 @@
           // Detect when none of the listeners replied to the sendMessage call and resolve
           // the promise to undefined as in Firefox.
           // See https://github.com/mozilla/webextension-polyfill/issues/130
-          if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {
+          if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE || extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_LISTENER_MESSAGE) {
             resolve();
           } else {
             reject(extensionAPIs.runtime.lastError);
